This is the information guide to the Flex Project and will serve as my working journal of the process to complete it!

-- The Frame section is for the building blocks that it runs on. It will be running in a docker container, built to have all the needed pieces installed. This includes Python, the AWS CLI and Terraform. The dockerfile when finshed will also be responsible for moving all of the code repo stored locally into the docker image, which will become the running container. This will allow the easiet and best way for all the code to be added, edited or removed and then know that the application runnning is the latest version. Containers are sweet. This will be published to a public GIT repo, so updating will be very easy. When this is pushed out as a complete package it will use a docker compose JSON file to handle the deployment of the app to the local machine it will be running on. Maybe eventually I will get it running in K8 so updating and usage are made better. For now I need to work on getting a solid 3 templates of Cloud Infrastructure builds into the app and have it run locally to depoy one of these templates into the AWS cloud service. And down the road maybe have it run in Azure and GCP, but again for now, I will stick to what I know and just have it work with AWS.

--  What is the purpose of this project? I wanted to make a tool that you could easily deploy cloud Infrastructure without having to write any code. This does exist in AWS in the form of Beanstalk sorta but that architecture is a bit abstract, especially for those who are not familiar with cloud concepts like containers and such. The flex project will deploy more standard, traditional(ish) Infrastructure to the cloud set up and ready for users or teams to start running their applications in the cloud! All while knowing their cloud Infrastructure is built and built solid. It was mainly inspired by my time working in a tech support dept for a company where we needed new test servers built but were not going to be given the physcial resources to do it, so we needed to get creative. I was able to put the time in to learn how to set up things in the cloud but not every team or user has that kinda time. This is for quickly standing up small to medium infrastructure to the cloud without writing a single line of code! So im summary this is being built small teams that need maintainable cloud infrastructure built fast, for developers who want to test deploying their applications to a cloud setup they would acutally encounter in the world, and last but not least for people who want to learn about building in the cloud but need some help getting started. 